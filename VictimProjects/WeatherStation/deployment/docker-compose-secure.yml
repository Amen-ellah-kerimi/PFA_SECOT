version: '3'

services:
  # MQTT Broker with security
  mqtt-broker:
    image: eclipse-mosquitto:latest
    container_name: mqtt-broker-secure
    ports:
      - "1883:1883"   # MQTT
      - "8883:8883"   # MQTT over TLS
      - "9001:9001"   # WebSockets
      - "9443:9443"   # WebSockets over TLS
    volumes:
      - ./mosquitto-secure.conf:/mosquitto/config/mosquitto.conf
      - ./acl:/mosquitto/config/acl
      - ./passwd:/mosquitto/config/passwd
      - ./certs:/mosquitto/config/certs
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
    restart: unless-stopped
    networks:
      - weather-network

  # Backend API with TLS
  backend:
    build:
      context: ../web_dashboard/backend
      dockerfile: Dockerfile
    container_name: weather-backend-secure
    ports:
      - "5000:5000"
      - "5443:5443"  # HTTPS
    environment:
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=8883
      - MQTT_USERNAME=web_dashboard
      - MQTT_PASSWORD=dashboard123
      - MQTT_USE_TLS=true
      - PORT=5000
      - FLASK_ENV=production
    volumes:
      - ./certs:/app/certs
    depends_on:
      - mqtt-broker
    restart: unless-stopped
    networks:
      - weather-network

  # Frontend with HTTPS
  frontend:
    image: nginx:alpine
    container_name: weather-frontend-secure
    ports:
      - "443:443"
    volumes:
      - ../web_dashboard/frontend/dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - weather-network

networks:
  weather-network:
    driver: bridge

volumes:
  mosquitto-data:
  mosquitto-log:
